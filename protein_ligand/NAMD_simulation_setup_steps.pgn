# Open pdb file in vmd

# Clean pdb file from anything except protein
# You can do this cleaning step in molecular visualizers like PyMOL
# You need to complete missing residues using Swissmodel ,for example

set ubq [atomselect top protein]
$ubq writepdb ubqp.pdb

# Call psfgen package for vmd
package require psfgen

# Load topology files
# CHARMm36 protein topology
topology top_all36_prot.rtf

# CHARMm22 ligand topology generated by Swissparam (according to your ligand name)
topology IIl_fred.rtf 

# Topology for water and ions
topology toppar_water_ions_namd.str

# Change the residue name of histidine to the proper name found in the topology file.
# Here I chose to protonate the epsilon nitrogen (HSE)
pdbalias residue HIS HSE

# The atom named “CD1" (δ carbon) in isoleucine residues is renamed as “CD", its proper name from the topology file.
pdbalias atom ILE CD1 CD

# The atom named “HG" (gamma hydrogen) in serine residues is renamed as “HG1", its proper name from the topology file.
pdbalias atom SER HG HG1

# A segment called A is created, containing all atoms from the protein.The segment command also adds hydrogen atoms.
segment A {pdb 1q5k.pdb} 

# Coordinates are read from 1q5k.pdb and residue and atom names are matched. Old segment labels will be overridden with the new segment label “A"
coordpdb 1q5k.pdb A 

# Coordinates of missing atoms (like hydrogens) are guessed based on residue definitions from the topology file.
guesscoord 

# The same for the ligand
segment B {pdb IIl_fred.pdb} 
coordpdb IIl_fred.pdb B
guesscoord

# A new pdb file with the complete coordinates of all atoms, including hydrogens, is written.
writepdb complex.pdb

# A psf file with the complete structural information of the protein is written.
writepsf complex.psf

# Call solvate package for vmd.
package require solvate

#The "package require solvate" command loads the solvate package, so that VMD will be able to call it.

# The solvate package will put your protein (described in complex.psf and complex.pdb)
# in a box of water. The -t option creates the water box dimensions such that
# there is a layer of water 10 Å in each direction from the atom with the largest
# coordinate in that direction. The -o option creates the output files complex_wb.pdb
# and complex_wb.psf for the protein with the water box. You will also obtain the files
# combine.pdb and combine.psf which may be eliminated. They are intermediate files 
# used by the solvate program to transport information into VMD.

solvate complex.psf complex.pdb -t 10 -o complex_wb

# Neutralize using autoionize
package require autoionize

autoionize -psf complex_wb.psf -pdb complex_wb.pdb -neutralize -o complex_wb_neutralized

open complex_wb_neutralized.psf
open complex_wb_neutralized.pdb

# This analyzes all atoms in the system and gives you the minimum and
# maximum values of x, y and z coordinates of the entire protein-water
# system.
set everyone [atomselect top all]

# The center of the water box may be determined by calculating the midpoint of each of the three sides in the coordinate system.
measure minmax $everyone
measure center $everyone
exit

# Starting simulation (the number after p is the number of threads you want to allocate to your calculations).
# namd2 +p4 npt_ex01.conf > npt_ex01.log &
